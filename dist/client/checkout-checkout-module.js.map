{"version":3,"sources":["./src/app/checkout/personal/personal.component.ts","./src/app/checkout/personal/personal.component.html","./src/app/checkout/checkout.module.ts","./src/app/checkout/success/success.component.ts","./src/app/checkout/success/success.component.html","./src/app/checkout/summary/bank-accept/bank-accept.component.ts","./src/app/checkout/summary/bank-accept/bank-accept.component.html","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout.routes.ts","./src/app/services/checkout-guard.service.ts","./src/app/checkout/confirmation/confirmation.component.ts","./src/app/checkout/confirmation/confirmation.component.html","./src/app/checkout/summary/summary.component.ts","./src/app/checkout/summary/summary.component.html","./src/app/checkout/summary/terms/terms.component.ts","./src/app/checkout/summary/terms/terms.component.html","./src/app/checkout/payment/payment.component.ts","./src/app/checkout/payment/payment.component.html","./src/app/checkout/progress-bar/progress-bar.component.ts","./src/app/checkout/progress-bar/progress-bar.component.html","./src/app/checkout/shipping/shipping.component.ts","./src/app/checkout/shipping/shipping.component.html"],"names":[],"mappings":"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","file":"checkout-checkout-module.js","sourcesContent":["import { User } from './../../store/model';\r\nimport { OrderState } from './../../store/order/order.reducer';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as OrderActions from '../../store/order/order.actions';\r\nimport * as fromApp from '../../store/app.reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport { Router } from '@angular/router';\r\nimport * as BlankValidators from '../../../utils/validators/blank.validator';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-personal',\r\n  templateUrl: './personal.component.html',\r\n  styleUrls: ['./personal.component.scss']\r\n})\r\nexport class PersonalComponent implements OnInit {\r\n\r\n  personalForm: FormGroup;\r\n\r\n  innerLoading = true;\r\n\r\n\r\n  constructor(private store: Store<fromApp.AppState>, private accountService: AccountService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new OrderActions.SetCheckoutStep(0));\r\n    this.personalForm = new FormGroup({\r\n      shipName: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), Validators.required, BlankValidators.notBlankValidator, Validators.minLength(3), Validators.maxLength(104)]),\r\n      phone: new FormControl(null, [Validators.required, Validators.pattern('[0-9]+'), Validators.minLength(11), Validators.maxLength(12)]),\r\n    });\r\n\r\n    this.store.select('order').pipe(take(1)).subscribe((order: OrderState) => {\r\n      if (order.personal) {\r\n        this.personalForm.patchValue({\r\n          shipName: order.personal.shipName,\r\n          phone: order.personal.phone\r\n        });\r\n        this.innerLoading = false;\r\n      } else {\r\n        this.accountService.getUser().pipe(take(1)).subscribe((data: User) => {\r\n          this.personalForm.patchValue({\r\n            shipName: (data.firstName ? data.firstName : '') + ' ' + (data.lastName ? data.lastName : ''),\r\n            phone: data.phone,\r\n          });\r\n          this.innerLoading = false;\r\n        });\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  onSubmitOrderForm() {\r\n    const postData = {\r\n      shipName: this.personalForm.value.shipName.trim(),\r\n      phone: this.personalForm.value.phone,\r\n    };\r\n    this.store.dispatch(new OrderActions.PostPersonal(postData));\r\n    this.router.navigate(['/checkout/shipping']);\r\n  }\r\n}\r\n","<div class=\"personal\">\r\n\r\n  <div *ngIf=\"innerLoading\" class=\"loader\"></div>\r\n\r\n  <div *ngIf=\"!innerLoading\">\r\n    <form [formGroup]=\"personalForm\" (ngSubmit)=\"onSubmitOrderForm()\">\r\n      <div class=\"info row\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"shipName\">NAME SURNAME</label>\r\n            <input type=\"text\" id=\"shipName\" class=\"form-control\" name=\"shipName\" formControlName=\"shipName\"\r\n              [maxlength]=\"104\">\r\n            <span *ngIf=\"personalForm.get('shipName').invalid && personalForm.get('shipName').touched\">\r\n              <span *ngIf=\"personalForm.get('shipName').errors['required']\" class=\"alert-danger\">This field is\r\n                required!</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\">PHONE NUMBER</label>\r\n            <input type=\"text\" id=\"phone\" class=\"form-control\" name=\"phone\" formControlName=\"phone\" [maxlength]=\"12\">\r\n            <span *ngIf=\"personalForm.get('phone').invalid && personalForm.get('phone').touched\" class=\"alert-danger\">\r\n              Please enter a valid phone number!\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n        </div>\r\n        <div class=\"controls col-md-6\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <a routerLink=\"/cart\" class=\"btn back\" type=\"button\">\r\n                Back to Cart\r\n              </a>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <button class=\"btn btn-info\" type=\"submit\" [disabled]=\"personalForm.invalid || personalForm.pending\">\r\n                Continue\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { TermsComponent } from './summary/terms/terms.component';\r\nimport { PersonalComponent } from './personal/personal.component';\r\nimport { SummaryComponent } from './summary/summary.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CheckoutRoutes } from './checkout.routes';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\r\nimport { CheckoutGuardService } from '../services/checkout-guard.service';\r\nimport { BankAcceptComponent } from './summary/bank-accept/bank-accept.component';\r\nimport { SuccessComponent } from './success/success.component';\r\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\r\nimport { ShippingComponent } from './shipping/shipping.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(CheckoutRoutes),\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [CheckoutComponent, ProgressBarComponent, ShippingComponent, SummaryComponent,\r\n    PaymentComponent, ConfirmationComponent, PersonalComponent,\r\n    BankAcceptComponent, TermsComponent, SuccessComponent],\r\n  providers: [CheckoutGuardService],\r\n  bootstrap: [BankAcceptComponent, TermsComponent]\r\n})\r\nexport class CheckoutModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-success',\r\n  templateUrl: './success.component.html',\r\n  styleUrls: ['./success.component.scss']\r\n})\r\nexport class SuccessComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"success container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 col-12 text-center\">\r\n      <span class=\"fa fa-check\"></span>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 col-12\">\r\n      <p>Your order request is successful!</p>\r\n      <a class=\"btn home\" routerLink=\"/\">Homepage</a>\r\n      <a class=\"btn orders\" routerLink=\"/account/orders\">Orders</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import * as CartActions from './../../../store/cart/cart.actions';\r\nimport { CartState } from './../../../store/cart/cart.reducer';\r\nimport { Checkout, Cart } from './../../../store/model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as fromApp from '../../../store/app.reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport * as OrderActions from '../../../store/order/order.actions';\r\nimport { Router } from '@angular/router';\r\nimport { CartService } from '../../../services/cart.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { OrderState } from 'src/app/store/order/order.reducer';\r\nimport { catchError, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-bank-accept',\r\n  templateUrl: './bank-accept.component.html'\r\n})\r\nexport class BankAcceptComponent implements OnInit {\r\n\r\n\r\n  cartState: Observable<CartState>;\r\n  orderState: Observable<OrderState>;\r\n\r\n  postOrder: Checkout;\r\n  postCart: Cart;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private store: Store<fromApp.AppState>, private router: Router,\r\n              private cartService: CartService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cartState = this.store.select('cart');\r\n    this.orderState = this.store.select('order');\r\n\r\n\r\n    this.orderState.subscribe((orderState: OrderState) => {\r\n      this.postOrder = {\r\n        shipName: orderState.personal.shipName,\r\n        shipAddress: orderState.shipping.shipAddress,\r\n        billingAddress: orderState.shipping.billingAddress ?\r\n          orderState.shipping.billingAddress : orderState.shipping.shipAddress,\r\n        city: orderState.shipping.city,\r\n        state: orderState.shipping.state,\r\n        zip: orderState.shipping.zip,\r\n        country: orderState.shipping.country,\r\n        phone: orderState.personal.phone\r\n      };\r\n    });\r\n\r\n    this.cartState.subscribe((cartState: CartState) => {\r\n      this.postCart = cartState.cart;\r\n    });\r\n  }\r\n\r\n\r\n  paymentConfirm() {\r\n    this.cartService.confirmCart(this.postCart).pipe(take(1), catchError(\r\n      error => {\r\n        alert('An error occurred. Operation cancelled. Please try again.');\r\n        if (error.status === 400) {\r\n          this.store.dispatch(new CartActions.FetchCart());\r\n        }\r\n        this.router.navigate(['/cart']);\r\n        return throwError(error);\r\n      }\r\n    )).subscribe(() => {\r\n      this.store.dispatch(new OrderActions.PostOrder(this.postOrder));\r\n    });\r\n    this.activeModal.close('Close click');\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">Confirm Payment</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>Connecting to Demo Bank...</p>\r\n  <p>Total price : {{postCart.totalPrice}} €</p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <p>This is a demo.</p>\r\n  <button type=\"button\" class=\"btn btn-info\" (click)=\"paymentConfirm()\">Confirm</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.scss']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"checkout container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-7\">\r\n      <app-progress-bar></app-progress-bar>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"col-md-1\"></div>\r\n    <div class=\"col-md-3\">\r\n      <app-summary></app-summary>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { PersonalComponent } from './personal/personal.component';\r\nimport { ShippingComponent } from './shipping/shipping.component';\r\nimport { Routes } from '@angular/router';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { AuthGuardService } from '../services/auth-guard.service';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\r\nimport { CheckoutGuardService } from '../services/checkout-guard.service';\r\nimport { SuccessComponent } from './success/success.component';\r\n\r\nexport const CheckoutRoutes: Routes = [\r\n  {\r\n    path: '', component: CheckoutComponent,\r\n    canActivate: [AuthGuardService, CheckoutGuardService],\r\n    canDeactivate: [CheckoutGuardService],\r\n    canActivateChild: [CheckoutGuardService],\r\n    children: [\r\n      { path: '', redirectTo: 'personal', pathMatch: 'full' },\r\n      { path: 'personal', component: PersonalComponent },\r\n      { path: 'shipping', component: ShippingComponent },\r\n      { path: 'payment', component: PaymentComponent },\r\n      { path: 'confirm', component: ConfirmationComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: 'success', component: SuccessComponent,\r\n    canActivate: [AuthGuardService],\r\n\r\n  }\r\n];\r\n","import { CartState } from './../store/cart/cart.reducer';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanDeactivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport * as fromApp from '../store/app.reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport * as fromOrder from '../store/order/order.reducer';\r\nimport * as fromCart from '../store/cart/cart.reducer';\r\nimport * as OrderActions from '../store/order/order.actions';\r\nimport { CheckoutComponent } from '../checkout/checkout.component';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class CheckoutGuardService implements CanActivate, CanActivateChild, CanDeactivate<CheckoutComponent> {\r\n  constructor(private store: Store<fromApp.AppState>, private router: Router) {\r\n  }\r\n\r\n  canCheckoutOrder() {\r\n    return this.store.select('order')\r\n      .pipe(take(1),\r\n        map((orderState: fromOrder.OrderState) => orderState.isCheckoutActive));\r\n  }\r\n\r\n  canCheckoutCart() {\r\n    return this.store.select('cart')\r\n      .pipe(take(1),\r\n        map((cartState: fromCart.CartState) => cartState.cart && cartState.cart.cartItems.length !== 0));\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return forkJoin([this.canCheckoutOrder(), this.canCheckoutCart()]).pipe(\r\n      map(([a, b]) => {\r\n        if (a && b) {\r\n          return true;\r\n        }\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return forkJoin([this.canCheckoutOrder(), this.canCheckoutCart()]).pipe(\r\n      map(([a, b]) => a && b)\r\n    );\r\n  }\r\n\r\n  canDeactivate(component: CheckoutComponent, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    this.store.dispatch(new OrderActions.IsCheckoutActive(false));\r\n    return true;\r\n  }\r\n\r\n\r\n}\r\n","import { CartState } from './../../store/cart/cart.reducer';\r\nimport { OrderState } from './../../store/order/order.reducer';\r\nimport * as OrderActions from '../../store/order/order.actions';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as fromApp from '../../store/app.reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.scss']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n\r\n  cartState: Observable<CartState>;\r\n\r\n  orderState: Observable<OrderState>;\r\n\r\n  innerLoading = false;\r\n\r\n\r\n  constructor(private store: Store<fromApp.AppState>, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new OrderActions.SetCheckoutStep(3));\r\n    this.cartState = this.store.select('cart');\r\n    this.cartState.pipe(take(1)).subscribe((cartState: CartState) => {\r\n      if (cartState == null || cartState.cart == null) {\r\n        this.router.navigate(['/cart']);\r\n      }\r\n    });\r\n\r\n    this.orderState = this.store.select('order');\r\n    this.orderState.pipe(take(1)).subscribe((orderState: OrderState) => {\r\n\r\n      if (!orderState || !orderState.payment || !orderState.personal || !orderState.shipping) {\r\n        this.router.navigate(['/cart']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"confirmation\">\r\n\r\n  <div *ngIf=\"innerLoading\" class=\"loader\"></div>\r\n\r\n  <div *ngIf=\"!innerLoading\">\r\n    <div class=\"panel\">\r\n      <div class=\"info row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"title row\">\r\n            <div class=\"col-md-10\">\r\n              <p>Shipping Information</p>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n              <a class=\"edit\" routerLink=\"/checkout/personal\">\r\n                <p>Edit</p>\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Name Surname: <span>{{(orderState | async).personal.shipName}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Country: <span>{{(orderState | async).shipping.country}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>City: <span>{{(orderState | async).shipping.city}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Address: <span>{{(orderState | async).shipping.shipAddress}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Phone: <span>{{(orderState | async).personal.phone}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"!(orderState | async).shipping.billingAddress\">\r\n            <div class=\"col-md-12\">\r\n              <p class=\"billing\">Use Shipping Address for Billing</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"info secondary row\" *ngIf=\"(orderState | async).shipping.billingAddress\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"title row\">\r\n            <div class=\"col-md-10\">\r\n              <p>Billing Information</p>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n              <a class=\"edit\" routerLink=\"/checkout/personal\">\r\n                <p>Edit</p>\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Address: <span>{{(orderState | async).shipping.billingAddress}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"info lower row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"title row\">\r\n            <div class=\"col-md-10\">\r\n              <p>Payment Information</p>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n              <a class=\"edit\" routerLink=\"/checkout/payment\">\r\n                <p>Edit</p>\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Card Number: <span>\r\n                  **********\r\n                  {{(orderState | async).payment.cardNo.toString()\r\n                  .substr((orderState | async).payment.cardNo.toString().length - 4,(orderState | async).payment.cardNo.toString().length)}}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Card Owner: <span>{{(orderState | async).payment.cardOwner}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>Expiration Date:\r\n                <span>{{(orderState | async).payment.cardExp.month}}/{{(orderState | async).payment.cardExp.year}}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <p>CCV: <span>{{(orderState | async).payment.cardCCV}}</span></p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { TermsComponent } from './terms/terms.component';\r\nimport { CartState } from './../../store/cart/cart.reducer';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport * as fromApp from '../../store/app.reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { OrderState } from 'src/app/store/order/order.reducer';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BankAcceptComponent } from './bank-accept/bank-accept.component';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  styleUrls: ['./summary.component.scss']\r\n})\r\nexport class SummaryComponent implements OnInit, OnDestroy {\r\n\r\n  cartState: Observable<CartState>;\r\n  orderState: Observable<OrderState>;\r\n  termsAccepted = false;\r\n\r\n  routerSubscription: Subscription;\r\n\r\n  constructor(private store: Store<fromApp.AppState>, private modalService: NgbModal, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cartState = this.store.select('cart');\r\n    this.orderState = this.store.select('order');\r\n\r\n    this.routerSubscription = this.router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe(event => { this.termsAccepted = false; });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.routerSubscription) {\r\n      this.routerSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  openBankModal() {\r\n    this.modalService.open(BankAcceptComponent, {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      centered: true\r\n    });\r\n  }\r\n\r\n  openTermsModel() {\r\n    this.modalService.open(TermsComponent, {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      centered: true\r\n    });\r\n  }\r\n}\r\n","<div class=\"summary\" *ngIf=\"(cartState | async).cart\">\r\n  <div class=\"title\">\r\n    Summary\r\n  </div>\r\n  <div class=\"product\">\r\n    <div *ngFor=\"let cartItem of (cartState | async).cart.cartItems\" class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"color\" [ngStyle]=\"{'background-color': cartItem.color.hex}\"></div>\r\n        <img src=\"{{cartItem.thumb}}\" alt=\"{{cartItem.name}}\">\r\n      </div>\r\n      <div class=\"col-md-8 details\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <p class=\"product-name\">{{cartItem.name}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <p class=\"amount\">Amount: <span>{{cartItem.amount}}</span></p>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <p class=\"price\">{{cartItem.price}} €</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"pricing\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-4\">\r\n        <span class=\"label\">Cart</span>\r\n      </div>\r\n      <div class=\"col-md-8 col-8\">\r\n        <span>{{(cartState | async).cart.totalCartPrice.toFixed(2) | number:'1.2' }} €</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"row \">\r\n      <div class=\"col-md-4 col-4\">\r\n        <span class=\"label\">Shipping</span>\r\n      </div>\r\n      <div class=\"col-md-8 col-8\">\r\n        <span>{{(cartState | async).cart.totalCargoPrice.toFixed(2) | number:'1.2' }} €</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"(cartState | async).cart && (cartState | async).cart.discount\" class=\"row\">\r\n      <div class=\"col-md-4 col-4\">\r\n        <span class=\"label discount-text\">Discount</span>\r\n      </div>\r\n      <div class=\"col-md-8 col-8\">\r\n        <span class=\"discount-text\">{{(cartState | async).cart.discount.discountPercent}}%</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"total\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-4\">\r\n        <span class=\"label\">Total</span>\r\n      </div>\r\n      <div class=\"col-md-8 col-8\">\r\n        <span>{{(cartState | async).cart.totalPrice.toFixed(2) | number:'1.2' }} €</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"purchase\" *ngIf=\"(orderState | async).checkoutStep === 3\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <input type=\"checkbox\" name=\"terms\" id=\"terms\" (change)=\"termsAccepted = !termsAccepted\">\r\n        <label for=\"terms\">\r\n          <p>I have read and confirm</p>\r\n        </label>\r\n        <div class=\"terms-text\" (click)=\"openTermsModel()\">\r\n          <p>the terms of service.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <Button class=\"btn btn-info\" (click)=\"openBankModal()\" [disabled]=\"!termsAccepted\">\r\n        Purchase\r\n      </Button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-terms',\r\n  templateUrl: './terms.component.html'\r\n})\r\nexport class TermsComponent implements OnInit {\r\n\r\n  constructor(public activeModal: NgbActiveModal) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  close() {\r\n    this.activeModal.close('Close click');\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">Terms of Service</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n    Facilis impedit consectetur esse hic?\r\n    Vitae sint laborum pariatur quas vel maiores!\r\n    Recusandae ut eveniet, nesciunt reiciendis fugiat enim. Similique, voluptatibus harum!</p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <p>This is a demo.</p>\r\n  <button type=\"button\" class=\"btn btn-info\" (click)=\"close()\">Close</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as fromApp from '../../store/app.reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport * as OrderActions from '../../store/order/order.actions';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.scss']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n\r\n  paymentForm: FormGroup;\r\n\r\n  days: Array<number>;\r\n  months: Array<number>;\r\n\r\n  constructor(private store: Store<fromApp.AppState>, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new OrderActions.SetCheckoutStep(2));\r\n    this.days = [...Array(12).keys()].map(i => i + 1);\r\n    this.months = [...Array(20).keys()].map(i => i + 2019);\r\n    this.paymentForm = new FormGroup({\r\n      cardNo: new FormControl(123456789, Validators.required),\r\n      cardOwner: new FormControl('DEMO', Validators.required),\r\n      cardExp: new FormGroup({\r\n        month: new FormControl(null, [Validators.required]),\r\n        year: new FormControl(null, [Validators.required]),\r\n      }),\r\n      cardCCV: new FormControl(123, [Validators.required, Validators.maxLength(3), Validators.minLength(3)]),\r\n    });\r\n  }\r\n\r\n  onSubmitOrderForm() {\r\n    const paymentData: any = {\r\n      cardOwner: this.paymentForm.value.cardOwner.toLocaleUpperCase(),\r\n      cardNo: this.paymentForm.value.cardNo,\r\n      cardExp: this.paymentForm.value.cardExp,\r\n      cardCCV: this.paymentForm.value.cardCCV,\r\n    };\r\n    this.store.dispatch(new OrderActions.PostPayment(paymentData));\r\n    this.router.navigate(['/checkout/confirm']);\r\n  }\r\n}\r\n","<div class=\"payment\">\r\n  <form [formGroup]=\"paymentForm\" (ngSubmit)=\"onSubmitOrderForm()\">\r\n    <div class=\"info\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"cardNo\">CARD NUMBER</label>\r\n            <input type=\"number\" id=\"cardNo\" class=\"form-control\" name=\"cardNo\" formControlName=\"cardNo\"\r\n              [maxlength]=\"20\">\r\n            <span *ngIf=\"paymentForm.get('cardNo').invalid && paymentForm.get('cardNo').touched\">\r\n              <span *ngIf=\"paymentForm.get('cardNo').errors['required']\" class=\"alert-danger\">This field is\r\n                required!</span>\r\n            </span>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"cardOwner\">CARD OWNER</label>\r\n            <input type=\"text\" id=\"cardOwner\" class=\"form-control\" name=\"cardOwner\" formControlName=\"cardOwner\"\r\n              [maxlength]=\"240\">\r\n            <span *ngIf=\"paymentForm.get('cardOwner').invalid && paymentForm.get('cardOwner').touched\">\r\n              <span *ngIf=\"paymentForm.get('cardOwner').errors['required']\" class=\"alert-danger\">This field is\r\n                required!</span>\r\n            </span>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"row\" formGroupName=\"cardExp\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"month\">MONTH</label>\r\n                <select name=\"month\" id=\"month\" class=\"form-control\" [formControlName]=\"'month'\">\r\n                  <option *ngFor=\"let number of days\" value=\"{{number}}\">{{number}}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"year\">YEAR</label>\r\n                <select name=\"year\" id=\"year\" class=\"form-control\" [formControlName]=\"'year'\">\r\n                  <option *ngFor=\"let number of months\" value=\"{{number}}\">{{number}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <span *ngIf=\"paymentForm.get('cardExp').invalid && paymentForm.get('cardExp').touched\" class=\"alert-danger\">\r\n              These fields are required!\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"cardCCV\">CCV</label>\r\n            <input type=\"number\" id=\"cardCCV\" class=\"form-control\" name=\"cardCCV\" placeholder=\"***\"\r\n              formControlName=\"cardCCV\" [maxlength]=\"3\">\r\n            <span *ngIf=\"paymentForm.get('cardCCV').invalid && paymentForm.get('cardCCV').touched\">\r\n              <span *ngIf=\"paymentForm.get('cardCCV').errors['required']\" class=\"alert-danger\">This field is\r\n                required!</span>\r\n            </span>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row warning\">\r\n        <div class=\"col-md-12\">\r\n          <p>*This is a demo site. Please <b>do not</b> enter your real card information.</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n      </div>\r\n      <div class=\"controls col-md-6\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <a routerLink=\"/checkout/shipping\" class=\"btn back\" type=\"button\">\r\n              Back\r\n            </a>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <button class=\"btn btn-info\" type=\"submit\" [disabled]=\"paymentForm.invalid || paymentForm.pending\">\r\n              Continue\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { OrderState } from './../../store/order/order.reducer';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport * as fromApp from '../../store/app.reducers';\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n\r\n  activeStep = 0;\r\n  activeValue = 25;\r\n  orderState: Observable<OrderState>;\r\n\r\n  constructor(private store: Store<fromApp.AppState>) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.select('order').subscribe((orderState: OrderState) => {\r\n      this.activeStep = orderState.checkoutStep;\r\n      if (orderState.checkoutStep === 0) {\r\n        this.activeValue = 25;\r\n      } else if (orderState.checkoutStep === 1) {\r\n        this.activeValue = 50;\r\n      } else if (orderState.checkoutStep === 2) {\r\n        this.activeValue = 75;\r\n      } else if (orderState.checkoutStep === 3) {\r\n        this.activeValue = 100;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"bar\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <p class=\"{{activeStep >= 0 ? 'active': ''}}\">Personal Information</p>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <p class=\"{{activeStep >= 1 ? 'active': ''}}\">Shipping</p>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <p class=\"{{activeStep >= 2 ? 'active': ''}}\">Payment</p>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <p class=\"{{activeStep >= 3 ? 'active': ''}}\">Review & Confirm</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <ngb-progressbar type=\"info\" [value]=\"activeValue\" height=\"5px\"></ngb-progressbar>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { User } from './../../store/model';\r\nimport * as OrderActions from './../../store/order/order.actions';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { take } from 'rxjs/operators';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport * as BlankValidators from '../../../utils/validators/blank.validator';\r\nimport * as fromApp from '../../store/app.reducers';\r\nimport { OrderState } from 'src/app/store/order/order.reducer';\r\n\r\n@Component({\r\n  selector: 'app-shipping',\r\n  templateUrl: './shipping.component.html',\r\n  styleUrls: ['./shipping.component.scss']\r\n})\r\nexport class ShippingComponent implements OnInit {\r\n\r\n  shippingForm: FormGroup;\r\n  billingAddressEnabled = false;\r\n\r\n  innerLoading = true;\r\n\r\n  constructor(private store: Store<fromApp.AppState>, private accountService: AccountService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new OrderActions.SetCheckoutStep(1));\r\n    this.shippingForm = new FormGroup({\r\n      shipAddress: new FormControl(null, [Validators.pattern('[0-9a-zA-Z #,-]+'), Validators.required, BlankValidators.notBlankValidator, Validators.minLength(3), Validators.maxLength(240)]),\r\n      billingAddress: new FormControl(null, [Validators.pattern('[0-9a-zA-Z #,-]+'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(240)]),\r\n      city: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), Validators.required, BlankValidators.notBlankValidator, Validators.minLength(3), Validators.maxLength(100)]),\r\n      state: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(40)]),\r\n      zip: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$'), Validators.maxLength(6), Validators.minLength(5)]),\r\n      country: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), Validators.required, BlankValidators.notBlankValidator, Validators.minLength(3), Validators.maxLength(40)])\r\n    });\r\n\r\n    this.accountService.getUser().pipe(take(1)).subscribe(data => {\r\n      this.shippingForm.patchValue({\r\n        shipAddress: data.address,\r\n        city: data.city,\r\n        state: data.state,\r\n        zip: data.zip,\r\n        country: data.country\r\n      });\r\n\r\n      this.innerLoading = false;\r\n    });\r\n\r\n\r\n    this.store.select('order').pipe(take(1)).subscribe((order: OrderState) => {\r\n      if (order.shipping) {\r\n        this.shippingForm.patchValue({\r\n          shipAddress: order.shipping.shipAddress,\r\n          city: order.shipping.city,\r\n          state: order.shipping.state,\r\n          zip: order.shipping.zip,\r\n          country: order.shipping.country\r\n        });\r\n        this.innerLoading = false;\r\n      } else {\r\n        this.accountService.getUser().pipe(take(1)).subscribe((data: User) => {\r\n          this.shippingForm.patchValue({\r\n            shipAddress: data.address,\r\n            city: data.city,\r\n            state: data.state,\r\n            zip: data.zip,\r\n            country: data.country\r\n          });\r\n          this.innerLoading = false;\r\n        });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  onSubmitOrderForm() {\r\n    const postData = {\r\n      shipAddress: this.shippingForm.value.shipAddress.trim(),\r\n      billingAddress: this.billingAddressEnabled ? this.shippingForm.value.billingAddress.trim() : null,\r\n      city: this.shippingForm.value.city.trim(),\r\n      state: this.shippingForm.value.state.trim(),\r\n      zip: this.shippingForm.value.zip,\r\n      country: this.shippingForm.value.country.trim()\r\n    };\r\n    this.store.dispatch(new OrderActions.PostShipping(postData));\r\n    this.router.navigate(['/checkout/payment']);\r\n  }\r\n\r\n}\r\n","<div class=\"shipping\">\r\n\r\n  <div *ngIf=\"innerLoading\" class=\"loader\"></div>\r\n\r\n  <div *ngIf=\"!innerLoading\">\r\n    <form [formGroup]=\"shippingForm\" (ngSubmit)=\"onSubmitOrderForm()\">\r\n      <div class=\"info\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"country\">COUNTRY</label>\r\n              <input type=\"text\" id=\"country\" class=\"form-control\" name=\"country\" formControlName=\"country\"\r\n                [maxlength]=\"240\">\r\n              <span *ngIf=\"shippingForm.get('country').invalid && shippingForm.get('country').touched\">\r\n                <span *ngIf=\"shippingForm.get('country').errors['required']\" class=\"alert-danger\">This field is\r\n                  required!</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"city\">CITY</label>\r\n              <input type=\"text\" id=\"city\" class=\"form-control\" name=\"city\" formControlName=\"city\" [maxlength]=\"240\">\r\n              <span *ngIf=\"shippingForm.get('city').invalid && shippingForm.get('city').touched\">\r\n                <span *ngIf=\"shippingForm.get('city').errors['required']\" class=\"alert-danger\">This field is\r\n                  required!</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"state\">STATE</label>\r\n              <input type=\"text\" id=\"state\" class=\"form-control\" name=\"state\" formControlName=\"state\" [maxlength]=\"240\">\r\n              <span *ngIf=\"shippingForm.get('state').invalid && shippingForm.get('state').touched\">\r\n                <span class=\"alert-danger\">Please enter a valid state</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"zip\">ZIP</label>\r\n              <input type=\"text\" id=\"zip\" class=\"form-control\" name=\"zip\" formControlName=\"zip\" [maxlength]=\"6\"\r\n                [minlength]=\"5\">\r\n              <span *ngIf=\"shippingForm.get('zip').invalid && shippingForm.get('zip').touched\" class=\"alert-danger\">\r\n                Please enter a valid zip number!\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"form-group\">\r\n              <label for=\"shipAddress\">ADDRESS</label>\r\n              <textarea type=\"text\" id=\"shipAddress\" class=\"form-control\" name=\"shipAddress\"\r\n                formControlName=\"shipAddress\" rows=\"3\">\r\n\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"billingAddressEnabled\" class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"form-group\">\r\n              <label for=\"billingAddress\">BILLING ADDRESS</label>\r\n              <textarea type=\"text\" id=\"billingAddress\" class=\"form-control\" name=\"billingAddress\"\r\n                formControlName=\"billingAddress\" rows=\"3\">\r\n\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"same col-md-12\" [ngClass]=\"!billingAddressEnabled ? 'active' : ''\"\r\n            (click)=\"billingAddressEnabled = false\">\r\n            <div></div>\r\n            <span>My billing address is the same as my shipping address.</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"different col-md-12\" [ngClass]=\"billingAddressEnabled ? 'active' : ''\"\r\n            (click)=\"billingAddressEnabled = true\">\r\n            <div></div>\r\n            <span>My billing address is not the same as my shipping address.</span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n        </div>\r\n        <div class=\"controls col-md-6\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <a routerLink=\"/checkout/personal\" class=\"btn back\" type=\"button\">\r\n                Back\r\n              </a>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <button class=\"btn btn-info\" type=\"submit\" [disabled]=\"shippingForm.invalid || shippingForm.pending\">\r\n                Continue\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}